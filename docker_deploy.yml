# - Salva a pasta do projeto
# - Salva as imagens (Dockerfile)
# - Salvar container (docker commit)
# - O ambiente deve ser todo configurado através de gerenciador de configuração. Ao final da tarefa e execução do processo, deveremos ter um ambiente funcional;
# - Construa dentro de sua automação um processo de deploy e rollback seguro e rápido da aplicação node. O deploy e rollback deverá garantir a instalação das dependências node novas (caso sejam adicionadas ou alteradas a versão de algum dependência por exemplo), deverá salvar a versão antiga para possível rollback e reiniciar todos processos node sem afetar a disponibilidade global da aplicação na máquina;



# Como o projeto inteiro fica no mesmo diretorio, vou controlar o deploy e rollback por branches

# Muda de branch, commita e push
# volta para a master e a atualiza
# mata os containers (docker_delete)
# sobe os novos containers (docker_start)

---
- hosts: localhost
  tasks:
  - name: Branch de backup
    shell: printf '{{ versao2 }}' > branchRollback.txt

  - name: Output branchRollback
    command: cat branchRollback.txt
    register: branchRollback

  - name: Renomeando a branch
    command: git checkout -b {{ branchRollback.stdout }}

  - name: Salvando o backup
    command: git commit -am "{{ branchRollback.stdout }}"
    ignore_errors: yes
  
  - name: Voltando pra master
    command: git checkout master

  - name: Atualizando master
    command: git pull

  - name: Parando os serviços
    command: ansible-playbook docker_delete.yml
    ignore_errors: yes

  - name: Inicia os serviços
    command: ansible-playbook docker_start.yml